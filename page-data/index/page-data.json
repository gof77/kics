{"componentChunkName":"component---src-templates-docs-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Gbook","docsLocation":"https://github.com/filipowm/boogi","docsLocationType":"github","editable":false}},"mdx":{"fields":{"id":"a819e454-cd90-5fd8-8c7a-f904dff19b9f","title":"KICS","slug":"/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"KICS\",\n  \"showMetadata\": true,\n  \"editable\": true,\n  \"showToc\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\uD83D\\uDC4B \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hello!\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BooGi\"), \" is an awesome \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://gatsbyjs.org/\"\n  }), \"GatsbyJS\"), \" documentation \\uD83D\\uDCD6\\nstarter. It generates modern documentation pages, which can serve as product\\ndocs, tutorials, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"span\", _extends({\n    parentName: \"em\"\n  }, {\n    \"className\": \"jargon-term\"\n  }), \"API\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"jargon-info\"\n  }), mdx(\"span\", {\n    parentName: \"span\"\n  }, mdx(\"b\", {\n    parentName: \"span\"\n  }, \"API\"), \" - Application Programming Interface\"), \" Computing interface which defines interactions between multiple software intermediaries\"))), \" docs and, especially, knowledge-bases.\"), mdx(\"p\", null, \"Goal is to give teams powerful tool which they can use to efficiently and\\ncollaboratively share their knowledge. They can easily host it on any\\ninfrastructure of choice or SaaS hosting like Netlify, Vercel or\\nGitHub / GitLab Pages. We want to provide a product, which can be customized\\nto (nearly) any needs, either using basic or advanced configuration options.\"), mdx(\"p\", null, \"BooGi is inspired by popular \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://gitbook.com\"\n  }), \"Gitbook\"), \" look and feel.\\nIt offers custom styling and components that enable building beautiful documentation\\nfor projects and products quickly. It follows docs-as-code principles, where\\nyou treat your documentation in the same way as your code.\"), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"What BooGi offers? \\uD83D\\uDD25\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#what-boogi-offers-fire","title":"What BooGi offers? :fire:"}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"index.mdx","fields":{"gitLogLatestAuthorName":"arazorback","gitLogLatestAuthorEmail":"arazorback@localhost.localdomain","gitLogLatestDate":"13 minutes ago"}},"frontmatter":{"metaTitle":null,"showMetadata":true,"editable":true,"showPreviousNext":null,"showToc":true}},"gitBranch":{"name":"main"},"gitCommit":{"hash":"09f8517110b6e24ad79dd1e871479021a4b522f0","date":"2023-05-14 04:46"}},"pageContext":{"id":"a819e454-cd90-5fd8-8c7a-f904dff19b9f"}},"staticQueryHashes":["12478684","12478684","1900987198","1900987198","2882937274","2882937274","3812332637","3812332637"]}